name: GitHub Manager Workflows
run-name:  Deploy to  ${{ github.actor }} @ ${{ github.repository }} / ${{ github.run_number }} 

on: 
  push:
    branches:
      - feat/gh-manager
  workflow_dispatch:
    inputs:
      run-name:
        description: 'Name of the run'
        required: true
        default: 'Deploy to '
      repository:
        description: 'Repository to deploy'
        required: true
        default: 'IanOliv/state'
      owner:
        description: 'Owner of the repository'
        required: true
        default: 'IanOliv'
      team:
        description: 'Team to deploy'
        required: true
        default: 'IanOliv'
      type:
        description: 'Type of deployment'
        type: 'string'
        required: true
        default: 'list'


    

jobs:
  generate-token:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        

      - name: Generate GitHub App Token
        id: generate_token
        uses: ./.github/actions/generate-token  # Use the action defined in the repository
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      # - name: Generate composite 
      #   id: generate_token_composite
      #   uses: ./.github/actions/generate-token-composite  # Use the action defined in the repository

      # - name: Use GitHub cli
      #   env:
      #     GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
      #   run: gh repo list IanOliv --limit 100 --json 'name'
  check-token:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/create-github-app-token@v1
      id: app-token
      with: 
        app-id: ${{ secrets.APP_ID }}
        private-key: ${{ secrets.PRIVATE_KEY }}
        # optional: owner not needed IF the app has access to the repo running the workflow
        #   if you get 'RequestError [HttpError]: Not Found 404', pass in owner
        owner: ${{ github.repository_owner }}

    # example 1a - cloning repo - clone using the `actions/checkout` step
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: IanOliv/state
        token: ${{ steps.app-token.outputs.token }}
        path: state

    - name: List files
      # if: inputs.type == 'list'
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        GITHUB_OWNER: '0xHackerSpace'
      run: gh repo list $GITHUB_OWNER --limit 100 --json 'name'
    
    - name: list files in repository
      run: gh api repos/0xHackerSpace/.github/contents --jq '.[].name'
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        GITHUB_OWNER: '0xHackerSpace'
        GITHUB_REPOSITORY: '.github'

    - name: create file in repository - 403 
      if: false
      run: |
        echo "Creating a new file" > newfile.txt
        gh api repos/0xHackerSpace/.github/contents/newfile.txt \
          -X PUT \
          -F message='Creating a new file' \
          -F content="$(base64 newfile.txt)" \
          -F branch=main
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        GITHUB_OWNER: '0xHackerSpace'
        GITHUB_REPOSITORY: '.github'
    # - name: commit on pull request 
    #   run: gh pr create --base main --head feat/gh-manager --title "chore update state" --body "chore update state"

    # - name: close merge request
    # - name: add label to pull request
    # - name: add tag 
    # - name: add add release  
    - name: add comment to pull request - 403 
      run: gh pr comment 1 --repo 0xHackerSpace/.github --body "chore update stateee"
      if: false
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        GITHUB_OWNER: '0xHackerSpace'
        GITHUB_REPOSITORY: '.github'
    # - name: add assignee to pull request
    # - name: add reviewer to pull request
    # - name: add milestone to pull request
    # - name: add project to pull request
    # - name: add project card to pull request
    # - name: add project column to pull request
    # - name: add project column to project
    # - name: add project card to project column
    # - name: add project card to project
    # - name: add project column to project
    # - name: add project to project
    # - name: add project column to project
    # - name: add project card to project
    - name: create issue 
      run: gh issue create --title "chore update state" --body "chore update state" --repo 0xHackerSpace/.github
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        GITHUB_OWNER: '0xHackerSpace'
        GITHUB_REPOSITORY: '.github'



      


    
