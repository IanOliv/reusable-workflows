name: GitHub Manager Workflows
run-name:  Deploy to  ${{ github.actor }} @ ${{ github.repository }} / ${{ github.run_number }} 

on: [push]

jobs:
  generate-token:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        

      - name: Generate GitHub App Token
        id: generate_token
        uses: ./.github/actions/generate-token  # Use the action defined in the repository
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      # - name: Generate composite 
      #   id: generate_token_composite
      #   uses: ./.github/actions/generate-token-composite  # Use the action defined in the repository

      # - name: Use GitHub cli
      #   env:
      #     GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
      #   run: gh repo list IanOliv --limit 100 --json 'name'
  check-token:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/create-github-app-token@v1
      id: app-token
      with: 
        app-id: ${{ secrets.APP_ID }}
        private-key: ${{ secrets.PRIVATE_KEY }}
        # optional: owner not needed IF the app has access to the repo running the workflow
        #   if you get 'RequestError [HttpError]: Not Found 404', pass in owner
        owner: ${{ github.repository_owner }}

    # example 1a - cloning repo - clone using the `actions/checkout` step
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: IanOliv/state
        token: ${{ steps.app-token.outputs.token }}
        path: state
    - name: List files
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
      run: gh repo list IanOliv --limit 100 --json 'name'
    
