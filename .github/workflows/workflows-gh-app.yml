name: GH-APP-WORKFLOWs
run-name: Deploy to ${{ inputs.deploy_target }} by @${{ github.actor }}


on:
  push:
    tags:
      - v0.0.*
    branches:
      - main
    
  workflow_dispatch:
    inputs:
      repo: 
        description: 'The main branch of the repository'
        required: true
        default: 'state'
      path: 
        description: 'The main branch of the repository'
        required: true
        default: 'from-action-1.json'
      message: 
        description: 'The main branch of the repository'
        required: true
        default: 'chore: update state'
      branch: 
        description: 'The main branch of the repository'
        required: true
        default: 'main'
      content: 
        description: 'The main branch of the repository'
        required: true
        default: |
          {
            "state": "updatedx"
          }

      event_type:
        description: 'The type of event to trigger'
        required: true
        default: 'notification'
        type: choice
        options:
        - notification
        - createFile
        - deleteFile
        - updateFile
        - createBranch


env:
  IMAGE_NAME: ${{ github.repository }}
  TOKEN: ${{ secrets.TOKEN }}
  MAIN_BRANCH: ${{ secrets.MAIN_BRANCH }}
  GH_APP_ID: ${{ secrets.GH_APP_ID }}
  GH_APP_INSTALLATION_ID: ${{ secrets.GH_APP_INSTALLATION_ID }}
  GH_APP_PRIVATE_KEY: ${{ secrets.GH_APP_PRIVATE_KEY }}
  GH_APP_PRIVATE_KEY_PATH: ${{ secrets.GH_APP_PRIVATE_KEY_PATH }}
  GH_APP_CLIENT_ID: ${{ secrets.GH_APP_CLIENT_ID }}
  GH_APP_CLIENT_SECRET: ${{ secrets.GH_APP_CLIENT_SECRET }}
  repo: ${{ inputs.repo || 'state' }}
  path: ${{ inputs.path || './state.json' }}
  # message:  ${{ inputs.message  || 'chore: update statDe' }}
  # branch: ${{ inputs.branch  || 'main' }}
  # content: ${{ inputs.content || '{ "state": "updatedx"}' }}
  MESSAGE: ${{ inputs.message || 'chore: update state' }}
  BRANCH: ${{ inputs.branch || 'main' }}
  CONTENT: ${{ inputs.content || '{ \"state\": \"updatedx\"}' }}



jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Updated to v3
        with:
          repository: 'IanOliv/state'
          ref: 'src'
          token: ${{ secrets.TOKEN }}
          path: ./state
      - name: Checkout code
        uses: actions/checkout@v4  # Updated to v3
        with:
          token: ${{ secrets.TOKEN }}
          

      - name: List repository files
        uses: ./.github/actions/gh-app-script
        with:
          repo: ${{ env.repo }}
          path: ${{ env.path }}
          message: ${{ env.message }}
          branch: ${{ env.branch }}
          content: ${{ env.content }}

# uses: actions/github-script@v7
#   id: my-script
          
# const octokit = new Octokit({
#   auth: 'YOUR-TOKEN'
# })

# await octokit.request('POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches', {
#   owner: 'OWNER',
#   repo: 'REPO',
#   workflow_id: 'WORKFLOW_ID',
#   ref: 'topic-branch',
#   inputs: {
#     name: 'Mona the Octocat',
#     home: 'San Francisco, CA'
#   },
#   headers: {
#     'X-GitHub-Api-Version': '2022-11-28'
#   }
# })

      # - name: list files on the state directory
      #   # working-directory: ./state
      #   if: always()
      #   run: ls -la

      # - name: end of build
      #   run: |
      #     # Add your build and deploy commands here
      #     echo "end of build"
