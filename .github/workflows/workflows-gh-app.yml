name: GH-APP-WORKFLOWs
run-name: Deploy to ${{ inputs.deploy_target }} by @${{ github.actor }}


on:
  push:
    tags:
      - v0.0.*
    branches:
      - main
    
  workflow_dispatch:

    # inputs:
    #   IMAGE_NAME:
    #     description: 'The name of the image'
    #     required: true
    #     default: 'my-image'
    #   PEM:
    #     description: 'The private key for the GitHub App'
    #     required: true
    #   APP_ID:
    #     description: 'The ID of the GitHub App'
    #     required: true
    #   INSTALLATION_ID:
    #     description: 'The ID of the GitHub App installation'
    #     required: true
    #   MAIN_BRANCH:
    #     description: 'The main branch of the repository'
    #     required: true
    #     default: 'main'

env:

  IMAGE_NAME: ${{ github.repository }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PEM:
  APP_ID: 938929
  INSTALLATION_ID: 
  MAIN_BRANCH: main




jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Updated to v3
        with:
          repository: 'IanOliv/state'
          ref: 'src'
          token: ${{ secrets.TOKEN }}
          path: ./state
          

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev build-essential

      - name: Install dependencies
        working-directory: ./state
        run: |
          mkdir -p .pip
          python -m venv venv
          source venv/bin/activate
          pip install --target=.pip -r requirements.txt
          
      - name: freeze dependencies
        working-directory: ./state
        run: |
          source venv/bin/activate
          pip freeze
        
      - name: execute python script
        working-directory: ./state
        run: |
          source venv/bin/activate
          export PYTHONPATH=$(pwd)/.pip:$PYTHONPATH
          python src/main.py

      - name: list files on the state directory
        working-directory: ./state
        if: always()
        run: ls -la

      - name: end of build
        run: |
          # Add your build and deploy commands here
          echo "end of build"
      # - name: Upload build artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: build-artifacts
      #     path: ./state 


  # execute:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     # - name: Checkout code
  #     #   uses: actions/checkout@v3  # Updated to v3
  #     #   with:
  #     #     repository: 'IanOliv/state'
  #     #     ref: 'src'
  #     #     token: ${{ secrets.TOKEN }}
  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: build-artifacts
  #         path: ./state 
  #     - name: list files on the state directory
  #       working-directory: ./state
  #       if: always()
  #       run: |
  #         # Add your build and deploy commands here
  #         ls -la
  #         echo "list files on the state directory"    
  #     - name: check python version
  #       working-directory: ./state
  #       run: |
  #         # python -m venv venv
  #         # source venv/bin/activate
  #         # pip install -r requirements.txt
  #         # python --version
  #         # python -m venv venv
  #         # pip freeze
  #         python src/main.py



        